// domain declarations
domCitizen = {Skolem, Leocrates}
domInstitution = {Court}
domIndividualEthos = {Ethos1, Ethos2}
domInstitutionalEthos = {Ethos3}
group ={Citizens}
gProp = {SecureCity_Goal_Holds}
goal = {SecureCity}

// predicate declarations
cK(group, gProp)
cooperate(domCitizen, goal)
convicted(domCitizen)
historic(domCitizen)
individual_ethos(domCitizen, domIndividualEthos!)
traitor(domCitizen)
prosecuted(domCitizen)
institutional_ethos(domInstitution, domInstitutionalEthos)
groupGoal(group, goal)
group_goal_Proposition(group, goal, gProp)

// formulas
(cooperate(x, SecureCity) ^ !historic(x)) => (individual_ethos(x, Ethos1) v individual_ethos(x, Ethos2)).
!cooperate(x, SecureCity) => (!individual_ethos(x, Ethos1) ^ !individual_ethos(x, Ethos2)).
-23.305402  individual_ethos(Skolem, Ethos1) ^ cooperate(Skolem, SecureCity)
-1.892742   individual_ethos(Skolem, Ethos2) ^ cooperate(Skolem, SecureCity)
cK(Citizens, SecureCity_Goal_Holds).
group_goal_Proposition(Citizens, SecureCity, SecureCity_Goal_Holds).
(cK(group, gprop) ^ group_goal_Proposition(group, goal, gprop)) => groupGoal(group, goal).
traitor(x) <=> EXIST g ((groupGoal(Citizens, g) ^ !cooperate(x, g))).
institutional_ethos(Court, Ethos3) <=> !(EXIST y ((historic(y) ^ traitor(y) ^ prosecuted(y) ^ !convicted(y)))).
(!historic(x) ^ !individual_ethos(x, Ethos2) ^ cK(Citizens, SecureCity_Goal_Holds) ^ group_goal_Proposition(Citizens, SecureCity, SecureCity_Goal_Holds)) => (individual_ethos(x, Ethos1) <=> cooperate(x, SecureCity)).
(!historic(x) ^ !individual_ethos(x, Ethos1) ^ cK(Citizens, SecureCity_Goal_Holds) ^ group_goal_Proposition(Citizens, SecureCity, SecureCity_Goal_Holds)) => ((individual_ethos(x, Ethos2) ^ institutional_ethos(Court, Ethos3)) <=> cooperate(x, SecureCity)).
historic(x) <=> !individual_ethos(x, y).
